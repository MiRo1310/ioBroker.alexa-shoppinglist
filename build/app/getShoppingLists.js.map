{
  "version": 3,
  "sources": ["../../src/app/getShoppingLists.ts"],
  "sourcesContent": ["import type AlexaShoppinglist from '../main';\nimport type { OnMessageObj } from '../types/types';\nimport { errorLogger } from './logging';\n\nexport const getShoppingLists = async (adapter: AlexaShoppinglist, obj: OnMessageObj): Promise<void> => {\n    try {\n        const result: { label: ioBroker.StringOrTranslated; value: string }[] = [];\n        const lists = await adapter.getObjectViewAsync('system', 'channel', {\n            startkey: `${obj.message.alexa}.Lists.`,\n            endkey: `${obj.message.alexa}.Lists.\\u9999`,\n        });\n        for (let i = 0; i < lists.rows.length; i++) {\n            const a = lists.rows[i];\n            if (a.value && a.id.split('.').length === 4) {\n                result.push({\n                    label: `${JSON.stringify(a.value.common.name)}`,\n                    value: `${a.id}.json`,\n                });\n            }\n        }\n        adapter.log.debug(`Lists: ${JSON.stringify(result)}`);\n        obj.callback && adapter.sendTo(obj.from, obj.command, result, obj.callback);\n    } catch (e: any) {\n        errorLogger('Error get shopping lists', e, adapter);\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAA4B;AAErB,MAAM,mBAAmB,OAAO,SAA4B,QAAqC;AACpG,MAAI;AACA,UAAM,SAAkE,CAAC;AACzE,UAAM,QAAQ,MAAM,QAAQ,mBAAmB,UAAU,WAAW;AAAA,MAChE,UAAU,GAAG,IAAI,QAAQ,KAAK;AAAA,MAC9B,QAAQ,GAAG,IAAI,QAAQ,KAAK;AAAA,IAChC,CAAC;AACD,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK,QAAQ,KAAK;AACxC,YAAM,IAAI,MAAM,KAAK,CAAC;AACtB,UAAI,EAAE,SAAS,EAAE,GAAG,MAAM,GAAG,EAAE,WAAW,GAAG;AACzC,eAAO,KAAK;AAAA,UACR,OAAO,GAAG,KAAK,UAAU,EAAE,MAAM,OAAO,IAAI,CAAC;AAAA,UAC7C,OAAO,GAAG,EAAE,EAAE;AAAA,QAClB,CAAC;AAAA,MACL;AAAA,IACJ;AACA,YAAQ,IAAI,MAAM,UAAU,KAAK,UAAU,MAAM,CAAC,EAAE;AACpD,QAAI,YAAY,QAAQ,OAAO,IAAI,MAAM,IAAI,SAAS,QAAQ,IAAI,QAAQ;AAAA,EAC9E,SAAS,GAAQ;AACb,oCAAY,4BAA4B,GAAG,OAAO;AAAA,EACtD;AACJ;",
  "names": []
}
