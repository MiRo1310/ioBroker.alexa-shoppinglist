{
  "version": 3,
  "sources": ["../../src/lib/utils.ts"],
  "sourcesContent": ["import type { ShoppingList, SortByTime1Alpha2 } from '../types/types';\n\nexport const firstLetterToUpperCase = (name: string): string => {\n    const firstLetter = name.slice(0, 1); // Ersten Buchstaben selektieren\n    const leftoverLetters = name.slice(1); // Restliche Buchstaben selektieren\n    return firstLetter.toUpperCase() + leftoverLetters;\n};\n\nexport const sortList = (array: ShoppingList[], sortBy: SortByTime1Alpha2): ShoppingList[] => {\n    if (sortBy === '1') {\n        return array.sort((a, b): number => {\n            return a.ts - b.ts;\n        });\n    }\n    if (sortBy === '2') {\n        return array.sort((a, b) => {\n            if (a.name > b.name) {\n                return 1;\n            } else if (a.name < b.name) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n    return array;\n};\n\n/*\nIs State and Ack === false and State typeof === type\n */\nexport const isStateValue = <T extends 'string' | 'boolean' | 'number'>(\n    state: ioBroker.State,\n    type: T,\n): state is ioBroker.State & { val: T extends 'string' ? string : T extends 'boolean' ? boolean : number } =>\n    state?.val !== undefined && typeof state.val === type && !state.ack;\n\nexport const getListId = (id: string): string => {\n    const parts = id.split('.'); //alexa2.0.Lists.SHOPPING_LIST.json\n    parts.pop();\n    return parts.join('.'); //alexa2.0.Lists.SHOPPING_LIST\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,yBAAyB,CAAC,SAAyB;AAC5D,QAAM,cAAc,KAAK,MAAM,GAAG,CAAC;AACnC,QAAM,kBAAkB,KAAK,MAAM,CAAC;AACpC,SAAO,YAAY,YAAY,IAAI;AACvC;AAEO,MAAM,WAAW,CAAC,OAAuB,WAA8C;AAC1F,MAAI,WAAW,KAAK;AAChB,WAAO,MAAM,KAAK,CAAC,GAAG,MAAc;AAChC,aAAO,EAAE,KAAK,EAAE;AAAA,IACpB,CAAC;AAAA,EACL;AACA,MAAI,WAAW,KAAK;AAChB,WAAO,MAAM,KAAK,CAAC,GAAG,MAAM;AACxB,UAAI,EAAE,OAAO,EAAE,MAAM;AACjB,eAAO;AAAA,MACX,WAAW,EAAE,OAAO,EAAE,MAAM;AACxB,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AACA,SAAO;AACX;AAKO,MAAM,eAAe,CACxB,OACA,UAEA,+BAAO,SAAQ,UAAa,OAAO,MAAM,QAAQ,QAAQ,CAAC,MAAM;AAE7D,MAAM,YAAY,CAAC,OAAuB;AAC7C,QAAM,QAAQ,GAAG,MAAM,GAAG;AAC1B,QAAM,IAAI;AACV,SAAO,MAAM,KAAK,GAAG;AACzB;",
  "names": []
}
